basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Jadwal:
    properties:
      _id:
        type: string
      estimasi_tiba:
        type: string
      kendaraan_id:
        type: string
      rute_id:
        type: string
      tanggal:
        type: string
      waktu_berangkat:
        type: string
    type: object
  models.Kendaraan:
    properties:
      _id:
        type: string
      jenis:
        type: string
      kapasitas:
        type: integer
      nomor_polisi:
        type: string
      status:
        type: string
    type: object
  models.Rute:
    properties:
      _id:
        type: string
      asal:
        type: string
      jarak_km:
        type: integer
      kode_rute:
        type: string
      nama_rute:
        type: string
      tujuan:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.User:
    properties:
      _id:
        type: string
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  repository.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  repository.JadwalWithRute:
    properties:
      estimasi_tiba:
        type: string
      id:
        type: string
      rute:
        $ref: '#/definitions/models.Rute'
      rute_id:
        type: string
      tanggal:
        type: string
      waktu_berangkat:
        type: string
    type: object
  repository.LoginResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample server for a transport app.
  license:
    name: Apache 2.0
    url: https://github.com/Haekalss
  title: Transport App API
  version: "1.0"
paths:
  /api/jadwals:
    get:
      consumes:
      - application/json
      description: Mengambil semua data jadwal beserta detail rutenya
      produces:
      - application/json
      responses:
        "200":
          description: Daftar semua jadwal
          schema:
            items:
              $ref: '#/definitions/repository.JadwalWithRute'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all jadwal
      tags:
      - Jadwal
    post:
      consumes:
      - application/json
      description: Membuat data jadwal baru (Admin Only)
      parameters:
      - description: Data jadwal baru
        in: body
        name: jadwal
        required: true
        schema:
          $ref: '#/definitions/models.Jadwal'
      produces:
      - application/json
      responses:
        "201":
          description: Jadwal berhasil dibuat
          schema:
            $ref: '#/definitions/models.Jadwal'
        "400":
          description: Bad Request - data tidak valid
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Rute or Kendaraan not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new jadwal
      tags:
      - Jadwal
  /api/jadwals/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus data jadwal berdasarkan ID (Admin Only)
      parameters:
      - description: Jadwal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Jadwal berhasil dihapus
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a jadwal
      tags:
      - Jadwal
    get:
      consumes:
      - application/json
      description: Mengambil data jadwal berdasarkan ID
      parameters:
      - description: Jadwal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data jadwal yang ditemukan
          schema:
            $ref: '#/definitions/models.Jadwal'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Jadwal not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a jadwal by ID
      tags:
      - Jadwal
    put:
      consumes:
      - application/json
      description: Memperbarui data jadwal yang ada (Admin Only)
      parameters:
      - description: Jadwal ID
        in: path
        name: id
        required: true
        type: string
      - description: Data jadwal yang akan diupdate
        in: body
        name: jadwal
        required: true
        schema:
          $ref: '#/definitions/models.Jadwal'
      produces:
      - application/json
      responses:
        "200":
          description: Data jadwal diupdate
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID atau Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Rute not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing jadwal
      tags:
      - Jadwal
  /api/kendaraans:
    get:
      consumes:
      - application/json
      description: Mengambil semua data kendaraan
      produces:
      - application/json
      responses:
        "200":
          description: Daftar semua kendaraan
          schema:
            items:
              $ref: '#/definitions/models.Kendaraan'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all kendaraan
      tags:
      - Kendaraan
    post:
      consumes:
      - application/json
      description: Membuat data kendaraan baru (Admin Only)
      parameters:
      - description: Data kendaraan baru
        in: body
        name: kendaraan
        required: true
        schema:
          $ref: '#/definitions/models.Kendaraan'
      produces:
      - application/json
      responses:
        "201":
          description: Kendaraan berhasil dibuat
          schema:
            $ref: '#/definitions/models.Kendaraan'
        "400":
          description: Bad Request - data tidak valid
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new kendaraan
      tags:
      - Kendaraan
  /api/kendaraans/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus data kendaraan berdasarkan ID (Admin Only)
      parameters:
      - description: Kendaraan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data kendaraan dihapus
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a kendaraan
      tags:
      - Kendaraan
    get:
      consumes:
      - application/json
      description: Mengambil data kendaraan berdasarkan ID
      parameters:
      - description: Kendaraan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data kendaraan yang ditemukan
          schema:
            $ref: '#/definitions/models.Kendaraan'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Kendaraan not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a kendaraan by ID
      tags:
      - Kendaraan
    put:
      consumes:
      - application/json
      description: Memperbarui data kendaraan yang ada (Admin Only)
      parameters:
      - description: Kendaraan ID
        in: path
        name: id
        required: true
        type: string
      - description: Data kendaraan yang akan diupdate
        in: body
        name: kendaraan
        required: true
        schema:
          $ref: '#/definitions/models.Kendaraan'
      produces:
      - application/json
      responses:
        "200":
          description: Data kendaraan diupdate
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID atau Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing kendaraan
      tags:
      - Kendaraan
  /api/login:
    post:
      consumes:
      - application/json
      description: Login menggunakan username dan password untuk mendapatkan token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/repository.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful, token returned
          schema:
            $ref: '#/definitions/repository.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid username or password
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login a user
      tags:
      - Auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Mendaftarkan pengguna baru dengan username dan email
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Username or email already exists
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/rutes:
    get:
      consumes:
      - application/json
      description: Mengambil semua data rute
      produces:
      - application/json
      responses:
        "200":
          description: Daftar semua rute
          schema:
            items:
              $ref: '#/definitions/models.Rute'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all rutes
      tags:
      - Rute
    post:
      consumes:
      - application/json
      description: Membuat data rute baru (Admin Only)
      parameters:
      - description: Data rute baru
        in: body
        name: rute
        required: true
        schema:
          $ref: '#/definitions/models.Rute'
      produces:
      - application/json
      responses:
        "201":
          description: Rute berhasil dibuat
          schema:
            $ref: '#/definitions/models.Rute'
        "400":
          description: Bad Request - data tidak valid
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new rute
      tags:
      - Rute
  /api/rutes/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus data rute berdasarkan ID (Admin Only)
      parameters:
      - description: Rute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data berhasil dihapus
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a rute
      tags:
      - Rute
    get:
      consumes:
      - application/json
      description: Mengambil data rute berdasarkan ID
      parameters:
      - description: Rute ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data rute yang ditemukan
          schema:
            $ref: '#/definitions/models.Rute'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Rute not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a rute by ID
      tags:
      - Rute
    put:
      consumes:
      - application/json
      description: Memperbarui data rute yang sudah ada berdasarkan ID (Admin Only)
      parameters:
      - description: Rute ID
        in: path
        name: id
        required: true
        type: string
      - description: Data rute yang akan diupdate
        in: body
        name: rute
        required: true
        schema:
          $ref: '#/definitions/models.Rute'
      produces:
      - application/json
      responses:
        "200":
          description: Data berhasil diupdate
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid ID atau Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Admin access required
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing rute
      tags:
      - Rute
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: 'Ketik "Bearer" diikuti spasi dan token. Contoh: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
